name: Deploy User Service to AWS

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-1
      LAMBDA_S3_BUCKET: lambda-function-bucket-kienmai
      LAMBDA_FUNCTION_NAME: backend-app-func
      ZIP_FILE_NAME: function.zip
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build backend service
        working-directory: backend-app
        run: |
          npm ci
          npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Update Lambda Package to S3 and Upload Lambda function code
        run: |
          cd backend-app
          npm install
          npm run build
          zip -r $ZIP_FILE_NAME dist node_modules package.json
          aws s3 cp $ZIP_FILE_NAME s3://$LAMBDA_S3_BUCKET/$ZIP_FILE_NAME
          aws lambda update-function-code \
          --function-name $LAMBDA_FUNCTION_NAME \
          --s3-bucket $LAMBDA_S3_BUCKET \
          --s3-key $ZIP_FILE_NAME
          echo "---> Lambda function '$LAMBDA_FUNCTION_NAME' code updated successfully"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk
      - name: Install CDK dependencies
        working-directory: infra-cdk
        run: npm ci
      - name: CDK Bootstrap (if not done yet)
        working-directory: infra-cdk
        run: cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      - name: Deploy CDK Stack
        working-directory: infra-cdk
        run: |
          cdk synth
          cdk deploy --all --require-approval never
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
